name: Deploy Infra with Terraform (Azure OIDC)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev/staging/prod)"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Dynamically pick client ID based on environment
      - name: Set Azure Client ID
        id: set-client
        run: |
          if [ "${{ inputs.environment }}" = "prod" ]; then
            echo "CLIENT_ID=${{ secrets.AZURE_CLIENT_ID_PROD }}" >> $GITHUB_ENV
          else
            echo "CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          fi
      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Install TFLint # install lint on agent
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name: Run TFLint and save report
        run: |
         mkdir -p tflint-reports
         tflint --format json > tflint-reports/tflint-report.json
      - name: Upload TFlint report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tflint-report
          path: tflint-reports/tflint-report.json
           
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3


      - name: Terraform Init with Azure Backend
        working-directory: environments/${{ inputs.environment }}
        run: |
          terraform init \
            -backend-config="resource_group_name=AGSL" \
            -backend-config="storage_account_name=${{vars.STG_NAME}}" \
            -backend-config="container_name=${{ inputs.environment }}" \
            -backend-config="key=${{ inputs.environment }}.tfstate" \
            -backend-config="access_key=${{secrets.STORAGE_ACCOUNT_SECRET}}"
      - name: Terraform Plan
        working-directory: environments/${{ inputs.environment }}
        run: terraform plan -var-file="${{ inputs.environment }}.tfvars"

      - name: Terraform Apply
        working-directory: environments/${{ inputs.environment }}
        run: terraform apply -var-file="${{ inputs.environment }}.tfvars" -auto-approve
