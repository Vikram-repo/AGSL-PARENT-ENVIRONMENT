Skip to content
Navigation Menu
Vikram-repo
AGSL-PARENT-ENVIRONMENT

Type / to search
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
1
Insights
Settings
Deploy Infra with Terraform (Azure OIDC)
Deploy Infra with Terraform (Azure OIDC) #28
Jobs
Run details
Workflow file for this run
.github/workflows/terraform.yml at 124ddcd
# name: Deploy Infra with Terraform (Azure OIDC)

# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: "Select environment (dev/staging/prod)"
#         required: true
#         type: choice
#         options:
#           - dev
#           - staging
#           - prod

# permissions:
#   id-token: write
#   contents: read

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     environment: ${{ inputs.environment }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Azure Login via OIDC
#         uses: azure/login@v2
#         with:
#           client-id: ${{ secrets.AZURE_CLIENT_ID }}
#           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3

#       - name: Terraform Init with Azure Backend
#         working-directory: environments/${{ inputs.environment }}
#         run: |
#           terraform init \
#             -backend-config="resource_group_name=AGSL" \
#             -backend-config="storage_account_name=pipelinetesting123" \
#             -backend-config="container_name=dev" \
#             -backend-config="key=${{ inputs.environment }}.tfstate" \
#             -backend-config="access_key=UrCnDNazsdeolo9vUObKFB0k10iQlmyKrkJ4wEiEXPtSPNuWrj4rYD8va069PLw2CfHIoQVmdKfb+AStloL6hg=="

#       - name: Terraform Plan
#         working-directory: environments/${{ inputs.environment }}
#         run: terraform plan -var-file="dev.tfvars"

#       - name: Terraform Apply
#         working-directory: environments/${{ inputs.environment }}
#         run: terraform apply -var-file="dev.tfvars" -auto-approve

name: Deploy Infra with Terraform (Azure OIDC)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev/staging/prod)"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Dynamically pick client ID based on environment
      - name: Set Azure Client ID
        id: set-client
        run: |
          if [ "${{ inputs.environment }}" = "prod" ]; then
            echo "CLIENT_ID=${{ secrets.AZURE_CLIENT_ID_PROD }}" >> $GITHUB_ENV
          else
            echo "CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          fi
      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init with Azure Backend
        working-directory: environments/${{ inputs.environment }}
        run: |
          terraform init \
            -backend-config="resource_group_name=AGSL" \
            -backend-config="storage_account_name=${{vars.STG_NAME}}" \
            -backend-config="container_name=${{ inputs.environment }}" \
            -backend-config="key=${{ inputs.environment }}.tfstate" \
            -backend-config="access_key=${{secrets.STORAGE_ACCOUNT_SECRET}}"
      - name: Terraform Plan
        working-directory: environments/${{ inputs.environment }}
        run: terraform plan -var-file="${{ inputs.environment }}.tfvars"

      - name: Terraform Apply
        working-directory: environments/${{ inputs.environment }}
        run: terraform apply -var-file="${{ inputs.environment }}.tfvars" -auto-approve

